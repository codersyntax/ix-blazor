{"version":3,"names":["hasDropdownItemWrapperImplemented","item","getDropdownItemElement","undefined","DropdownController","constructor","this","dropdowns","Map","submenuIds","isWindowListenerActive","connected","dropdown","addOverlayListeners","set","getId","discoverAllSubmenus","discoverSubmenus","disconnected","delete","forEach","discoverSubmenu","present","isPresent","willPresent","getAssignedSubmenuIds","dismissChildren","uid","childIds","id","dismiss","get","willDismiss","dismissAll","ignoreBehaviorForIds","ignoreRelatedDropdowns","preventClosing","closeBehavior","shouldIgnore","includes","path","buildComposedPath","Set","length","skipRelatedDropdown","has","dismissOthers","add","pathIncludesTrigger","eventTargets","eventTarget","HTMLElement","hasAttribute","pathIncludesDropdown","find","element","tagName","ruleKey","Object","keys","key","window","addEventListener","event","hasTrigger","composedPath","hasDropdown","addDisposableEventListener","eventType","callback","removeEventListener","dropdownController","dropdownCss","IxDropdownStyle0","sequenceId","Dropdown","autoUpdateCleanup","localUId","assignedSubmenu","focusDropdownItemBind","focusDropdownItem","bind","itemObserver","MutationObserver","arrowFocusController","items","dropdownItems","connectedCallback","trigger","registerListener","cacheSubmenuId","stopImmediatePropagation","preventDefault","detail","indexOf","push","disconnectedCallback","disposeClickListener","disposeKeyListener","show","defaultPrevented","showChanged","emit","Array","from","hostElement","querySelectorAll","slotElement","shadowRoot","querySelector","addEventListenersFor","_a","call","_b","toggleController","triggerElement","_c","setAttribute","dispatchEvent","CustomEvent","bubbles","composed","cancelable","registerKeyListener","document","activeElement","setTimeout","resolveElement","el","findElement","checkForSubmenuAnchor","dropdownItem","isSubMenu","style","zIndex","Promise","resolve","selector","observer","disconnect","observe","body","childList","subtree","changedShow","newShow","anchorElement","anchor","applyDropdownPosition","ArrowFocusController","dropdownRef","destroyAutoUpdate","changedTrigger","newTriggerValue","isAnchorSubmenu","closest","isSubmenu","positionConfig","strategy","positioningStrategy","middleware","suppressAutomaticPlacement","flip","fallbackStrategy","placement","inline","shift","offset","autoUpdate","async","computeResponse","computePosition","assign","top","left","transform","Math","round","x","y","overwriteDropdownStyle","overwriteStyle","triggerRef","ancestorResize","ancestorScroll","elementResize","index","requestAnimationFrame","focus","componentDidLoad","componentDidRender","isTriggerElement","onDropdownClick","target","ignoreRelatedSubmenu","updatePosition","render","h","Host","ref","class","overflow","margin","minWidth","position","role","onClick","display","header"],"sources":["src/components/dropdown/dropdown-controller.ts","src/components/dropdown/dropdown.scss?tag=ix-dropdown&encapsulation=shadow","src/components/dropdown/dropdown.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { IxComponent } from '../utils/internal';\nexport type CloseBehavior = 'inside' | 'outside' | 'both' | boolean;\n\nexport interface DropdownInterface extends IxComponent {\n  closeBehavior: CloseBehavior;\n  discoverAllSubmenus: boolean;\n\n  getAssignedSubmenuIds(): string[];\n  getId(): string;\n\n  discoverSubmenu(): void;\n\n  isPresent(): boolean;\n\n  willPresent?(): boolean;\n  willDismiss?(): boolean;\n\n  present(): void;\n  dismiss(): void;\n}\n\nexport function hasDropdownItemWrapperImplemented(\n  item: unknown\n): item is DropdownItemWrapper {\n  return (\n    item &&\n    (item as DropdownItemWrapper).getDropdownItemElement !== undefined &&\n    typeof (item as DropdownItemWrapper).getDropdownItemElement === 'function'\n  );\n}\n\nexport interface DropdownItemWrapper {\n  getDropdownItemElement(): Promise<HTMLIxDropdownItemElement>;\n}\n\ntype SubmenuIds = Record<string, string[]>;\n\nclass DropdownController {\n  private dropdowns: Map<string, DropdownInterface> = new Map<\n    string,\n    DropdownInterface\n  >();\n  private submenuIds: SubmenuIds = {};\n\n  private isWindowListenerActive = false;\n\n  connected(dropdown: DropdownInterface) {\n    if (!this.isWindowListenerActive) {\n      this.addOverlayListeners();\n    }\n    this.dropdowns.set(dropdown.getId(), dropdown);\n\n    if (dropdown.discoverAllSubmenus) {\n      this.discoverSubmenus();\n    }\n  }\n\n  disconnected(dropdown: DropdownInterface) {\n    this.dropdowns.delete(dropdown.getId());\n  }\n\n  discoverSubmenus() {\n    this.dropdowns.forEach((dropdown) => {\n      dropdown.discoverSubmenu();\n    });\n  }\n\n  present(dropdown: DropdownInterface) {\n    if (!dropdown.isPresent() && dropdown.willPresent()) {\n      this.submenuIds[dropdown.getId()] = dropdown.getAssignedSubmenuIds();\n      dropdown.present();\n    }\n  }\n\n  dismissChildren(uid: string) {\n    const childIds = this.submenuIds[uid] || [];\n    for (const id of childIds) {\n      this.dismiss(this.dropdowns.get(id));\n    }\n  }\n\n  dismiss(dropdown: DropdownInterface) {\n    if (dropdown.isPresent() && dropdown.willDismiss()) {\n      this.dismissChildren(dropdown.getId());\n      dropdown.dismiss();\n      delete this.submenuIds[dropdown.getId()];\n    }\n  }\n\n  dismissAll(\n    ignoreBehaviorForIds: string[] = [],\n    ignoreRelatedDropdowns = false\n  ) {\n    this.dropdowns.forEach((dropdown) => {\n      const preventClosing =\n        dropdown.closeBehavior === 'inside' || dropdown.closeBehavior === false;\n\n      const shouldIgnore = ignoreBehaviorForIds.includes(dropdown.getId());\n      const path = this.buildComposedPath(dropdown.getId(), new Set<string>());\n\n      if (ignoreBehaviorForIds.length > 0 && ignoreRelatedDropdowns) {\n        let skipRelatedDropdown = false;\n\n        ignoreBehaviorForIds.forEach((id) => {\n          if (path.has(id)) {\n            skipRelatedDropdown = true;\n            return;\n          }\n        });\n\n        if (!skipRelatedDropdown) {\n          return;\n        }\n      }\n\n      if (!shouldIgnore && preventClosing) {\n        return;\n      }\n\n      this.dismiss(dropdown);\n    });\n  }\n\n  dismissOthers(uid: string) {\n    let path = this.buildComposedPath(uid, new Set<string>());\n    path.add(uid);\n\n    this.dropdowns.forEach((dropdown) => {\n      if (\n        dropdown.closeBehavior !== 'inside' &&\n        dropdown.closeBehavior !== false &&\n        !path.has(dropdown.getId())\n      ) {\n        this.dismiss(dropdown);\n      }\n    });\n  }\n\n  pathIncludesTrigger(eventTargets: EventTarget[]) {\n    for (let eventTarget of eventTargets) {\n      if (eventTarget instanceof HTMLElement) {\n        if (eventTarget.hasAttribute('data-ix-dropdown-trigger')) {\n          return eventTarget;\n        }\n      }\n    }\n\n    return;\n  }\n\n  private pathIncludesDropdown(eventTargets: EventTarget[]) {\n    return !!eventTargets.find(\n      (element: HTMLElement) => element.tagName === 'IX-DROPDOWN'\n    );\n  }\n\n  private buildComposedPath(id: string, path: Set<string>): Set<string> {\n    if (this.submenuIds[id]) {\n      path.add(id);\n    }\n\n    for (const ruleKey of Object.keys(this.submenuIds)) {\n      if (this.submenuIds[ruleKey].includes(id)) {\n        this.buildComposedPath(ruleKey, path).forEach((key) => path.add(key));\n      }\n    }\n\n    return path;\n  }\n\n  private addOverlayListeners() {\n    this.isWindowListenerActive = true;\n\n    window.addEventListener('click', (event: PointerEvent) => {\n      const hasTrigger = this.pathIncludesTrigger(event.composedPath());\n      const hasDropdown = this.pathIncludesDropdown(event.composedPath());\n\n      if (!hasTrigger && !hasDropdown) {\n        this.dismissAll();\n      }\n    });\n\n    window.addEventListener('keydown', (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        this.dismissAll([...this.dropdowns.keys()]);\n      }\n    });\n  }\n}\n\nexport const addDisposableEventListener = (\n  element: Element | Window | Document,\n  eventType: string,\n  callback: EventListenerOrEventListenerObject\n) => {\n  element.addEventListener(eventType, callback);\n\n  return () => {\n    element.removeEventListener(eventType, callback);\n  };\n};\n\nexport const addDisposableEventListenerAsArray = (\n  listener: {\n    element: Element | Window | Document;\n    eventType: string;\n    callback: EventListenerOrEventListenerObject;\n  }[]\n) => {\n  const disposables = listener.map(({ callback, element, eventType }) =>\n    addDisposableEventListener(element, eventType, callback)\n  );\n\n  return () => disposables.forEach((dispose) => dispose());\n};\n\nexport const dropdownController = new DropdownController();\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n\n@import 'legacy/mixins/fonts';\n@import 'mixins/text-truncation';\n@import 'mixins/shadow-dom/component';\n\n:host {\n  background-color: var(--theme-color-2);\n  border-radius: var(--theme-default-border-radius);\n  @include ix-component;\n  min-width: 0px;\n  z-index: var(--theme-z-index-dropdown);\n  box-shadow: var(--theme-shadow-4);\n\n  padding: 0.25rem 0px;\n\n  .dropdown-header {\n    display: flex;\n    align-items: center;\n    height: $large-control-height;\n    color: var(--theme-menu-header--color);\n    padding: 0 $default-space;\n  }\n}\n\n:host(.overflow) {\n  max-height: 50vh;\n  overflow-y: auto;\n}\n\n:host(:not(.show)) {\n  display: none;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  autoUpdate,\n  computePosition,\n  ComputePositionConfig,\n  flip,\n  inline,\n  offset,\n  shift,\n} from '@floating-ui/dom';\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  Watch,\n} from '@stencil/core';\nimport { ComponentInterface } from '@stencil/core/internal';\nimport { ArrowFocusController } from '../utils/focus';\nimport {\n  addDisposableEventListener,\n  CloseBehavior,\n  dropdownController,\n  DropdownInterface,\n  hasDropdownItemWrapperImplemented,\n} from './dropdown-controller';\nimport { AlignedPlacement } from './placement';\n\nlet sequenceId = 0;\n\n@Component({\n  tag: 'ix-dropdown',\n  styleUrl: 'dropdown.scss',\n  shadow: true,\n})\nexport class Dropdown implements ComponentInterface, DropdownInterface {\n  @Element() hostElement!: HTMLIxDropdownElement;\n\n  /**\n   * Suppress the automatic placement of the dropdown.\n   *\n   * @since 2.0.0\n   */\n  @Prop() suppressAutomaticPlacement = false;\n\n  /**\n   * Show dropdown\n   */\n  @Prop({ mutable: true, reflect: true }) show = false;\n\n  /**\n   * Define an element that triggers the dropdown.\n   * A trigger can either be a string that will be interpreted as id attribute or a DOM element.\n   */\n  @Prop() trigger: string | HTMLElement | Promise<HTMLElement>;\n\n  /**\n   * Define an anchor element\n   */\n  @Prop() anchor: string | HTMLElement;\n\n  /**\n   * Controls if the dropdown will be closed in response to a click event depending on the position of the event relative to the dropdown.\n   * If the dropdown is a child of another one, it will be closed with the parent, regardless of its own close behavior.\n   */\n  @Prop() closeBehavior: CloseBehavior = 'both';\n\n  /**\n   * Placement of the dropdown\n   */\n  @Prop() placement: AlignedPlacement = 'bottom-start';\n\n  /**\n   * Position strategy\n   */\n  @Prop() positioningStrategy: 'absolute' | 'fixed' = 'fixed';\n\n  /**\n   * An optional header shown at the top of the dropdown\n   */\n  @Prop() header?: string;\n\n  /**\n   * Move dropdown along main axis of alignment\n   *\n   * @internal\n   */\n  @Prop() offset: {\n    mainAxis?: number;\n    crossAxis?: number;\n    alignmentAxis?: number;\n  };\n\n  /**\n   * @internal\n   */\n  @Prop() overwriteDropdownStyle: (delegate: {\n    dropdownRef: HTMLElement;\n    triggerRef?: HTMLElement;\n  }) => Promise<Partial<CSSStyleDeclaration>>;\n\n  /**\n   * @internal\n   * If initialisation of this dropdown is expected to be defered submenu discovery will have to be re-run globally by the controller.\n   * This property indicates the need for that to the controller.\n   */\n  @Prop() discoverAllSubmenus = false;\n\n  /** @internal */\n  @Prop() ignoreRelatedSubmenu = false;\n\n  /**\n   * Fire event after visibility of dropdown has changed\n   */\n  @Event() showChanged: EventEmitter<boolean>;\n\n  private autoUpdateCleanup: () => void = null;\n\n  private triggerElement?: Element;\n  private anchorElement?: Element;\n\n  private dropdownRef: HTMLElement;\n  private localUId = `dropdown-${sequenceId++}`;\n  private assignedSubmenu: string[] = [];\n\n  private arrowFocusController: ArrowFocusController;\n  private focusDropdownItemBind = this.focusDropdownItem.bind(this);\n\n  private itemObserver = new MutationObserver(() => {\n    this.arrowFocusController.items = this.dropdownItems;\n  });\n\n  connectedCallback(): void {\n    dropdownController.connected(this);\n\n    if (this.trigger != undefined) {\n      this.registerListener(this.trigger);\n    }\n  }\n\n  @Listen('ix-assign-sub-menu')\n  cacheSubmenuId(event: CustomEvent<string>) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    const { detail } = event;\n\n    if (this.assignedSubmenu.indexOf(detail) === -1) {\n      this.assignedSubmenu.push(detail);\n    }\n  }\n\n  disconnectedCallback() {\n    dropdownController.dismiss(this);\n    dropdownController.disconnected(this);\n\n    if (this.disposeClickListener) {\n      this.disposeClickListener();\n    }\n\n    if (this.disposeKeyListener) {\n      this.disposeKeyListener();\n    }\n\n    if (this.autoUpdateCleanup) {\n      this.autoUpdateCleanup();\n    }\n  }\n\n  getAssignedSubmenuIds() {\n    return this.assignedSubmenu;\n  }\n\n  isPresent() {\n    return this.show;\n  }\n\n  present() {\n    this.show = true;\n  }\n\n  dismiss() {\n    this.show = false;\n  }\n\n  getId() {\n    return this.localUId;\n  }\n\n  willDismiss() {\n    const { defaultPrevented } = this.showChanged.emit(false);\n    return !defaultPrevented;\n  }\n\n  willPresent() {\n    const { defaultPrevented } = this.showChanged.emit(true);\n    return !defaultPrevented;\n  }\n\n  get dropdownItems() {\n    return Array.from(this.hostElement.querySelectorAll('ix-dropdown-item'));\n  }\n\n  get slotElement() {\n    return this.hostElement.shadowRoot.querySelector('slot');\n  }\n\n  private disposeClickListener?: () => void;\n  private disposeKeyListener?: () => void;\n\n  private addEventListenersFor() {\n    this.disposeClickListener?.();\n    this.disposeKeyListener?.();\n\n    const toggleController = () => {\n      if (!this.isPresent()) {\n        dropdownController.present(this);\n      } else {\n        dropdownController.dismiss(this);\n      }\n\n      dropdownController.dismissOthers(this.getId());\n    };\n\n    this.disposeClickListener = addDisposableEventListener(\n      this.triggerElement,\n      'click',\n      (event: PointerEvent) => {\n        if (!event.defaultPrevented) {\n          toggleController();\n        }\n      }\n    );\n\n    this.triggerElement?.setAttribute(\n      'data-ix-dropdown-trigger',\n      this.localUId\n    );\n  }\n\n  /** @internal */\n  @Method()\n  async discoverSubmenu() {\n    this.triggerElement?.dispatchEvent(\n      new CustomEvent('ix-assign-sub-menu', {\n        bubbles: true,\n        composed: true,\n        cancelable: true,\n        detail: this.localUId,\n      })\n    );\n  }\n\n  private registerKeyListener() {\n    if (!this.triggerElement) {\n      return;\n    }\n\n    this.disposeKeyListener = addDisposableEventListener(\n      this.triggerElement,\n      'keydown',\n      (event: KeyboardEvent) => {\n        if (event.key !== 'ArrowDown') {\n          return;\n        }\n\n        if (document.activeElement !== this.triggerElement) {\n          return;\n        }\n\n        dropdownController.present(this);\n\n        setTimeout(() => {\n          this.focusDropdownItem(0);\n        });\n      }\n    );\n  }\n\n  private async registerListener(\n    element: string | HTMLElement | Promise<HTMLElement>\n  ) {\n    this.triggerElement = await this.resolveElement(element);\n    if (this.triggerElement) {\n      this.addEventListenersFor();\n      this.discoverSubmenu();\n    }\n  }\n\n  private async resolveElement(\n    element: string | HTMLElement | Promise<HTMLElement>\n  ) {\n    const el = await this.findElement(element);\n\n    return this.checkForSubmenuAnchor(el);\n  }\n\n  private async checkForSubmenuAnchor(element: Element) {\n    if (!element) {\n      return null;\n    }\n\n    if (hasDropdownItemWrapperImplemented(element)) {\n      const dropdownItem = await element.getDropdownItemElement();\n      dropdownItem.isSubMenu = true;\n      this.hostElement.style.zIndex = `var(--theme-z-index-dropdown)`;\n    }\n\n    if (element.tagName === 'IX-DROPDOWN-ITEM') {\n      (element as HTMLIxDropdownItemElement).isSubMenu = true;\n      this.hostElement.style.zIndex = `var(--theme-z-index-dropdown)`;\n    }\n\n    return element;\n  }\n\n  private findElement(\n    element: string | HTMLElement | Promise<HTMLElement>\n  ): Promise<Element> {\n    if (element instanceof Promise) {\n      return element;\n    }\n\n    if (typeof element === 'object') {\n      return Promise.resolve(element);\n    }\n\n    if (typeof element != 'string') {\n      return;\n    }\n\n    const selector = `#${element}`;\n    return new Promise((resolve) => {\n      if (document.querySelector(selector)) {\n        return resolve(document.querySelector(selector));\n      }\n\n      const observer = new MutationObserver(() => {\n        if (document.querySelector(selector)) {\n          resolve(document.querySelector(selector));\n          observer.disconnect();\n        }\n      });\n\n      observer.observe(document.body, {\n        childList: true,\n        subtree: true,\n      });\n    });\n  }\n\n  @Watch('show')\n  async changedShow(newShow: boolean) {\n    if (newShow) {\n      this.anchorElement = await (this.anchor\n        ? this.resolveElement(this.anchor)\n        : this.resolveElement(this.trigger));\n\n      if (this.anchorElement) {\n        this.applyDropdownPosition();\n      }\n\n      this.arrowFocusController = new ArrowFocusController(\n        this.dropdownItems,\n        this.dropdownRef,\n        this.focusDropdownItemBind\n      );\n\n      this.itemObserver.observe(this.dropdownRef, {\n        childList: true,\n        subtree: true,\n      });\n\n      this.registerKeyListener();\n    } else {\n      this.destroyAutoUpdate();\n      this.arrowFocusController?.disconnect();\n      this.itemObserver.disconnect();\n      this.disposeKeyListener?.();\n    }\n  }\n\n  @Watch('trigger')\n  changedTrigger(newTriggerValue: string | HTMLElement | Promise<HTMLElement>) {\n    this.registerListener(newTriggerValue);\n  }\n\n  private destroyAutoUpdate() {\n    if (this.autoUpdateCleanup) {\n      this.autoUpdateCleanup();\n      this.autoUpdateCleanup = null;\n    }\n  }\n\n  private isAnchorSubmenu(): boolean {\n    if (!hasDropdownItemWrapperImplemented(this.anchorElement)) {\n      // Is no official dropdown-item, but check if any dropdown-item\n      // is placed somewhere up the DOM\n      return !!this.anchorElement?.closest('ix-dropdown-item');\n    }\n\n    return true;\n  }\n\n  private async applyDropdownPosition() {\n    if (!this.show) {\n      return;\n    }\n    if (!this.anchorElement) {\n      return;\n    }\n    if (!this.dropdownRef) {\n      return;\n    }\n    const isSubmenu = this.isAnchorSubmenu();\n\n    let positionConfig: Partial<ComputePositionConfig> = {\n      strategy: this.positioningStrategy,\n      middleware: [],\n    };\n\n    if (!this.suppressAutomaticPlacement) {\n      positionConfig.middleware.push(\n        flip({ fallbackStrategy: 'initialPlacement' })\n      );\n    }\n\n    positionConfig.placement = isSubmenu ? 'right-start' : this.placement;\n\n    positionConfig.middleware = [\n      ...positionConfig.middleware,\n      inline(),\n      shift(),\n    ];\n\n    if (this.offset) {\n      positionConfig.middleware.push(offset(this.offset));\n    }\n\n    this.destroyAutoUpdate();\n\n    this.autoUpdateCleanup = autoUpdate(\n      this.anchorElement,\n      this.dropdownRef,\n      async () => {\n        const computeResponse = await computePosition(\n          this.anchorElement,\n          this.dropdownRef,\n          positionConfig\n        );\n        Object.assign(this.dropdownRef.style, {\n          top: '0',\n          left: '0',\n          transform: `translate(${Math.round(computeResponse.x)}px,${Math.round(\n            computeResponse.y\n          )}px)`,\n        });\n        if (this.overwriteDropdownStyle) {\n          const overwriteStyle = await this.overwriteDropdownStyle({\n            dropdownRef: this.dropdownRef,\n            triggerRef: this.triggerElement as HTMLElement,\n          });\n\n          Object.assign(this.dropdownRef.style, overwriteStyle);\n        }\n      },\n      {\n        ancestorResize: true,\n        ancestorScroll: true,\n        elementResize: true,\n      }\n    );\n  }\n\n  private focusDropdownItem(index: number) {\n    requestAnimationFrame(() => {\n      this.dropdownItems[index]?.shadowRoot.querySelector('button').focus();\n    });\n  }\n\n  async componentDidLoad() {\n    this.changedTrigger(this.trigger);\n  }\n\n  async componentDidRender() {\n    await this.applyDropdownPosition();\n    this.anchorElement = await (this.anchor\n      ? this.resolveElement(this.anchor)\n      : this.resolveElement(this.trigger));\n  }\n\n  private isTriggerElement(element: HTMLElement) {\n    const trigger = !!element.hasAttribute('data-ix-dropdown-trigger');\n\n    return trigger;\n  }\n\n  private onDropdownClick(event: PointerEvent) {\n    const target = dropdownController.pathIncludesTrigger(event.composedPath());\n    if (target) {\n      if (target !== this.triggerElement) {\n        event.preventDefault();\n      }\n\n      if (this.isTriggerElement(target)) {\n        if (this.closeBehavior === 'outside') {\n          event.preventDefault();\n        }\n        return;\n      }\n    }\n\n    if (\n      !event.defaultPrevented &&\n      (this.closeBehavior === 'inside' || this.closeBehavior === 'both')\n    ) {\n      dropdownController.dismissAll([this.getId()], this.ignoreRelatedSubmenu);\n      return;\n    }\n\n    dropdownController.dismissOthers(this.getId());\n  }\n\n  /**\n   * Update position of dropdown\n   */\n  @Method()\n  async updatePosition() {\n    this.applyDropdownPosition();\n  }\n\n  render() {\n    return (\n      <Host\n        data-ix-dropdown={this.localUId}\n        ref={(ref) => (this.dropdownRef = ref)}\n        class={{\n          'dropdown-menu': true,\n          show: this.show,\n          overflow: true,\n        }}\n        style={{\n          margin: '0',\n          minWidth: '0px',\n          position: this.positioningStrategy,\n        }}\n        role=\"list\"\n        onClick={(event: PointerEvent) => this.onDropdownClick(event)}\n      >\n        <div style={{ display: 'contents' }}>\n          {this.header && <div class=\"dropdown-header\">{this.header}</div>}\n          {this.show && <slot></slot>}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}