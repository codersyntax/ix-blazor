{"version":3,"names":["applicationHeaderCss","IxApplicationHeaderStyle0","ApplicationHeader","contentBackground","this","hostElement","shadowRoot","querySelector","componentWillLoad","useContextConsumer","ApplicationLayoutContext","ctx","host","suppressResponsive","breakpoint","applicationLayoutService","applicationLayoutContext","tryUpdateAppSwitch","menuDisposable","menuController","expandChange","on","show","menuExpanded","modeDisposable","onChange","mode","updateIsSlottedContent","componentDidLoad","attachSiemensLogoIfLoaded","disconnectedCallback","_a","dispose","_b","watchApplicationLayoutContext","showMenu","watchSuppressResponsive","isLogoSlotted","slotElement","nodes","assignedNodes","flatten","length","window","customElements","whenDefined","logoElement","document","createElement","appendChild","onMenuClick","toggle","menuToggle","emit","resolveContextMenuButton","Promise","resolve","readTask","callbackUpdateAppSwitchModal","appSwitchConfig","showAppSwitch","hasSlottedElements","onContentBgClick","e","target","preventDefault","render","hasApplicationContextAvailable","showMenuByApplicationFrame","showApplicationSwitch","h","Host","key","class","slot","onClick","expanded","icon","ghost","logo","name","format","Fragment","discoverAllSubmenus","trigger","onSlotchange"],"sources":["src/components/application-header/application-header.scss?tag=ix-application-header&encapsulation=shadow","src/components/application-header/application-header.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n@import 'mixins/shadow-dom/component';\n@import 'mixins/break-points';\n\n:host {\n  @include ix-component;\n\n  display: flex;\n  align-items: flex-end;\n  flex-wrap: nowrap;\n  position: relative;\n  width: 100%;\n  height: calc(2.75rem + var(--ix-safe-area-inset-top, 0rem));\n  min-height: calc(2.75rem + var(--ix-safe-area-inset-top, 0rem));\n  padding-top: 0;\n  padding-right: calc(1rem + var(--ix-safe-area-inset-right, 0rem));\n  padding-bottom: 0.3rem;\n  padding-left: calc(0.625rem + var(--ix-safe-area-inset-left, 0rem));\n\n  color: var(--theme-app-header--color);\n  background-color: var(--theme-app-header--background);\n\n  border-bottom: var(--theme-app-header--border-width) solid\n    var(--theme-app-header--border-color);\n\n  z-index: var(--theme-z-index-fixed);\n\n  .app-switch {\n    margin-right: 1rem;\n  }\n\n  .name {\n    overflow: hidden;\n    overflow-wrap: anywhere;\n    text-overflow: ellipsis;\n    text-wrap: nowrap;\n    max-width: 50%;\n    margin-left: 1.5rem;\n    margin-right: 2.5rem;\n    margin-bottom: 0.25rem;\n    color: var(--theme-app-header--color);\n  }\n\n  .logo {\n    display: inline-flex;\n    align-items: center;\n    position: relative;\n    height: 32px;\n    overflow: hidden;\n    line-height: 0rem;\n    color: var(--theme-app-header-logo--color);\n    margin-left: 0.375rem;\n  }\n\n  .content {\n    display: flex;\n    position: relative;\n    flex-direction: row;\n    margin-left: auto;\n    margin-right: 0px;\n  }\n\n  .dropdown {\n    overflow: visible;\n  }\n\n  .dropdown-content {\n    padding: 1rem;\n  }\n\n  .context-menu {\n    display: none;\n  }\n\n  .context-menu.context-menu-visible {\n    display: block;\n  }\n\n  @include media-breakpoint-match('sm') {\n    .logo {\n      display: none;\n    }\n  }\n\n  ::slotted(ix-avatar) {\n    margin-left: 1rem;\n  }\n}\n\n:host(.breakpoint-sm) {\n  .logo {\n    margin-left: 0.5rem;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Fragment,\n  h,\n  Host,\n  Prop,\n  readTask,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { showAppSwitch } from '../utils/app-switch';\nimport { applicationLayoutService } from '../utils/application-layout';\nimport {\n  ApplicationLayoutContext,\n  AppSwitchConfiguration,\n} from '../utils/application-layout/context';\nimport { Breakpoint } from '../utils/breakpoints';\nimport { ContextType, useContextConsumer } from '../utils/context';\nimport { menuController } from '../utils/menu-service/menu-service';\nimport { hasSlottedElements } from '../utils/shadow-dom';\nimport { Disposable } from '../utils/typed-event';\n\n/**\n * @slot logo - Location of the logo\n */\n@Component({\n  tag: 'ix-application-header',\n  styleUrl: 'application-header.scss',\n  shadow: true,\n})\nexport class ApplicationHeader {\n  @Element() hostElement!: HTMLIxApplicationHeaderElement;\n\n  /**\n   * Application name\n   */\n  @Prop() name?: string;\n\n  /**\n   * Controls the visibility of the menu toggle button based on the context of the application header.\n   *\n   * When the application header is utilized outside the application frame, the menu toggle button is displayed.\n   * Conversely, if the header is within the application frame, this property is ineffective.\n   *\n   * @since 2.5.0\n   */\n  @Prop({ mutable: true }) showMenu?: boolean = false;\n\n  /**\n   * Event emitted when the menu toggle button is clicked\n   *\n   * @since 2.5.0\n   */\n  @Event() menuToggle!: EventEmitter<boolean>;\n\n  @State() breakpoint: Breakpoint = 'lg';\n  @State() menuExpanded = false;\n  @State() suppressResponsive = false;\n\n  @State() hasSlottedElements = false;\n\n  private menuDisposable?: Disposable;\n  private modeDisposable?: Disposable;\n  private callbackUpdateAppSwitchModal?: (\n    config: AppSwitchConfiguration\n  ) => void;\n\n  @State() applicationLayoutContext: ContextType<\n    typeof ApplicationLayoutContext\n  >;\n\n  get contentBackground() {\n    return this.hostElement.shadowRoot.querySelector('.dropdown-content');\n  }\n\n  componentWillLoad() {\n    useContextConsumer(\n      this.hostElement,\n      ApplicationLayoutContext,\n      (ctx) => {\n        if (ctx?.host === 'map-navigation') {\n          this.suppressResponsive = true;\n          this.breakpoint = 'md';\n          return;\n        }\n\n        this.breakpoint = applicationLayoutService.breakpoint;\n        this.applicationLayoutContext = ctx;\n\n        this.tryUpdateAppSwitch();\n      },\n      true\n    );\n\n    this.menuDisposable = menuController.expandChange.on((show) => {\n      this.menuExpanded = show;\n    });\n\n    this.modeDisposable = applicationLayoutService.onChange.on((mode) => {\n      if (this.suppressResponsive) {\n        return;\n      }\n\n      this.breakpoint = mode;\n    });\n\n    this.updateIsSlottedContent();\n  }\n\n  componentDidLoad() {\n    this.attachSiemensLogoIfLoaded();\n  }\n\n  disconnectedCallback() {\n    this.menuDisposable?.dispose();\n    this.modeDisposable?.dispose();\n  }\n\n  @Watch('applicationLayoutContext')\n  watchApplicationLayoutContext() {\n    if (this.applicationLayoutContext) {\n      this.showMenu = false;\n    }\n  }\n  @Watch('suppressResponsive')\n  watchSuppressResponsive() {\n    this.breakpoint = 'md';\n  }\n\n  private isLogoSlotted() {\n    const slotElement = this.hostElement.shadowRoot.querySelector(\n      'slot[name=\"logo\"]'\n    ) as HTMLSlotElement;\n    const nodes = slotElement.assignedNodes({\n      flatten: true,\n    });\n\n    return nodes.length !== 0;\n  }\n\n  private async attachSiemensLogoIfLoaded() {\n    await window.customElements.whenDefined('ix-siemens-logo');\n    const logoElement = document.createElement('ix-siemens-logo');\n    if (!this.isLogoSlotted()) {\n      this.hostElement.shadowRoot\n        .querySelector('.logo')\n        .appendChild(logoElement);\n    }\n  }\n\n  private async onMenuClick() {\n    if (this.applicationLayoutContext) {\n      menuController.toggle();\n    } else {\n      this.menuExpanded = !this.menuExpanded;\n    }\n\n    this.menuToggle.emit(this.menuExpanded);\n  }\n\n  private resolveContextMenuButton() {\n    return new Promise<HTMLElement>((resolve) =>\n      readTask(() =>\n        resolve(\n          this.hostElement.shadowRoot.querySelector(\n            '[data-context-menu]'\n          ) as HTMLElement\n        )\n      )\n    );\n  }\n\n  private tryUpdateAppSwitch() {\n    if (!this.callbackUpdateAppSwitchModal) {\n      return;\n    }\n\n    this.callbackUpdateAppSwitchModal(\n      this.applicationLayoutContext?.appSwitchConfig\n    );\n  }\n\n  private async showAppSwitch() {\n    this.callbackUpdateAppSwitchModal = await showAppSwitch(\n      this.applicationLayoutContext?.appSwitchConfig\n    );\n  }\n\n  private updateIsSlottedContent() {\n    const slotElement =\n      this.hostElement.shadowRoot.querySelector('.content slot');\n\n    this.hasSlottedElements = hasSlottedElements(slotElement);\n  }\n\n  private onContentBgClick(e: MouseEvent) {\n    if (e.target === this.contentBackground) {\n      e.preventDefault();\n    }\n  }\n\n  render() {\n    const hasApplicationContextAvailable = !!this.applicationLayoutContext;\n\n    const showMenuByApplicationFrame =\n      this.breakpoint === 'sm' &&\n      this.suppressResponsive === false &&\n      hasApplicationContextAvailable;\n\n    const showApplicationSwitch =\n      this.applicationLayoutContext?.appSwitchConfig &&\n      this.breakpoint !== 'sm' &&\n      this.suppressResponsive === false;\n\n    return (\n      <Host\n        class={{\n          [`breakpoint-${this.breakpoint}`]: true,\n        }}\n        slot=\"application-header\"\n      >\n        {(this.showMenu || showMenuByApplicationFrame) && (\n          <ix-menu-expand-icon\n            onClick={() => this.onMenuClick()}\n            expanded={this.menuExpanded}\n          ></ix-menu-expand-icon>\n        )}\n        {showApplicationSwitch && (\n          <ix-icon-button\n            onClick={() => this.showAppSwitch()}\n            icon=\"apps\"\n            ghost\n            class=\"app-switch\"\n          ></ix-icon-button>\n        )}\n        <div class={{ logo: true }}>\n          <slot name=\"logo\"></slot>\n        </div>\n        <ix-typography format=\"body-lg\" class=\"name\">\n          {this.name}\n        </ix-typography>\n        <div class=\"content\">\n          {this.breakpoint === 'sm' ? (\n            <Fragment>\n              <ix-icon-button\n                class={{\n                  ['context-menu']: true,\n                  ['context-menu-visible']: this.hasSlottedElements,\n                }}\n                data-context-menu\n                icon=\"more-menu\"\n                ghost\n              ></ix-icon-button>\n              <ix-dropdown\n                data-overflow-dropdown\n                class=\"dropdown\"\n                discoverAllSubmenus\n                trigger={this.resolveContextMenuButton()}\n              >\n                <div\n                  class=\"dropdown-content\"\n                  onClick={(e) => this.onContentBgClick(e)}\n                >\n                  <slot\n                    onSlotchange={() => this.updateIsSlottedContent()}\n                  ></slot>\n                </div>\n              </ix-dropdown>\n            </Fragment>\n          ) : (\n            <slot onSlotchange={() => this.updateIsSlottedContent()}></slot>\n          )}\n          <slot name=\"ix-application-header-avatar\"></slot>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}