{"version":3,"names":["isDanger","variant","toUpperCase","isPrimary","isSecondary","getButtonClasses","outline","ghost","iconOnly","iconOval","selected","disabled","btn","getSpinnerSize","btnProps","icon","iconSize","BaseButton","props","children","extraClasses","_a","ariaAttributes","_b","h","Object","assign","onClick","e","undefined","tabindex","_c","tabIndex","type","class","loading","size","hideTrack","name","color","iconColor","content","alignment","afterContent"],"sources":["src/components/button/base-button.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { h } from '@stencil/core';\nimport { A11yAttributes } from '../utils/a11y';\nimport { ButtonVariant } from './button';\n\nexport type ButtonAlignment = 'center' | 'start';\n\nconst isDanger = (variant: string) => {\n  return variant.toUpperCase() === 'Danger'.toUpperCase();\n};\n\nconst isPrimary = (variant: string) => {\n  return variant.toUpperCase() === 'Primary'.toUpperCase();\n};\n\nconst isSecondary = (variant: string) => {\n  return variant.toUpperCase() === 'Secondary'.toUpperCase();\n};\n\nexport const getButtonClasses = (\n  variant: ButtonVariant,\n  outline: boolean,\n  ghost: boolean,\n  iconOnly = false,\n  iconOval = false,\n  selected: boolean,\n  disabled: boolean\n) => {\n  return {\n    btn: true,\n    'btn-danger': isDanger(variant) && !outline && !ghost,\n    'btn-outline-danger': isDanger(variant) && outline && !ghost,\n    'btn-invisible-danger': isDanger(variant) && !outline && ghost,\n    'btn-primary': isPrimary(variant) && !outline && !ghost,\n    'btn-outline-primary': isPrimary(variant) && outline && !ghost,\n    'btn-invisible-primary': isPrimary(variant) && !outline && ghost,\n    'btn-secondary': isSecondary(variant) && !outline && !ghost,\n    'btn-outline-secondary': isSecondary(variant) && outline && !ghost,\n    'btn-invisible-secondary': isSecondary(variant) && !outline && ghost,\n    'btn-icon': iconOnly,\n    'btn-oval': iconOval,\n    selected: selected,\n    disabled: disabled,\n  };\n};\n\nexport type BaseButtonProps = {\n  type: string;\n  variant: ButtonVariant;\n  outline: boolean;\n  ghost: boolean;\n  iconOnly: boolean;\n  iconOval: boolean;\n  selected: boolean;\n  disabled: boolean;\n  loading: boolean;\n  icon: string;\n  onClick?: Function;\n  ariaAttributes?: A11yAttributes;\n  extraClasses?: { [key: string]: boolean };\n  iconSize?: string;\n  iconColor?: string;\n  alignment?: ButtonAlignment;\n  tabIndex?: number;\n  afterContent?: any;\n};\n\nconst getSpinnerSize = (btnProps: BaseButtonProps) => {\n  if (!btnProps.icon) {\n    return 'small';\n  }\n\n  switch (btnProps.iconSize) {\n    case '12':\n      return 'xx-small';\n    case '16':\n      return 'x-small';\n    default:\n      return 'small';\n  }\n};\n\nexport function BaseButton(props: BaseButtonProps, children) {\n  const extraClasses = props.extraClasses ?? {};\n\n  const ariaAttributes = props.ariaAttributes ?? {};\n  if (!ariaAttributes['aria-disabled'] && props.disabled) {\n    ariaAttributes['aria-disabled'] = 'true';\n  }\n\n  return (\n    <button\n      {...ariaAttributes}\n      onClick={(e: Event) => (props.onClick ? props.onClick(e) : undefined)}\n      tabindex={props.disabled ? -1 : props.tabIndex ?? 0}\n      type={props.type}\n      class={{\n        ...getButtonClasses(\n          props.variant,\n          props.outline,\n          props.ghost,\n          props.iconOnly,\n          props.iconOval,\n          props.selected,\n          props.disabled || props.loading\n        ),\n        ...extraClasses,\n      }}\n    >\n      {props.loading ? (\n        <ix-spinner size={getSpinnerSize(props)} hideTrack></ix-spinner>\n      ) : null}\n      {props.icon && !props.loading ? (\n        <ix-icon\n          class=\"icon\"\n          name={props.icon}\n          size={props.iconSize as any}\n          color={props.iconColor}\n        ></ix-icon>\n      ) : null}\n      <div\n        class={{\n          content: true,\n          [`content-${props.alignment}`]: !!props.alignment,\n        }}\n      >\n        {children}\n      </div>\n      {props.afterContent ? props.afterContent : null}\n    </button>\n  );\n}\n"],"mappings":"oCAcA,MAAMA,EAAYC,GACTA,EAAQC,gBAAkB,SAASA,cAG5C,MAAMC,EAAaF,GACVA,EAAQC,gBAAkB,UAAUA,cAG7C,MAAME,EAAeH,GACZA,EAAQC,gBAAkB,YAAYA,c,MAGlCG,EAAmB,CAC9BJ,EACAK,EACAC,EACAC,EAAW,MACXC,EAAW,MACXC,EACAC,KAEO,CACLC,IAAK,KACL,aAAcZ,EAASC,KAAaK,IAAYC,EAChD,qBAAsBP,EAASC,IAAYK,IAAYC,EACvD,uBAAwBP,EAASC,KAAaK,GAAWC,EACzD,cAAeJ,EAAUF,KAAaK,IAAYC,EAClD,sBAAuBJ,EAAUF,IAAYK,IAAYC,EACzD,wBAAyBJ,EAAUF,KAAaK,GAAWC,EAC3D,gBAAiBH,EAAYH,KAAaK,IAAYC,EACtD,wBAAyBH,EAAYH,IAAYK,IAAYC,EAC7D,0BAA2BH,EAAYH,KAAaK,GAAWC,EAC/D,WAAYC,EACZ,WAAYC,EACZC,SAAUA,EACVC,SAAUA,IAyBd,MAAME,EAAkBC,IACtB,IAAKA,EAASC,KAAM,CAClB,MAAO,O,CAGT,OAAQD,EAASE,UACf,IAAK,KACH,MAAO,WACT,IAAK,KACH,MAAO,UACT,QACE,MAAO,Q,WAIGC,EAAWC,EAAwBC,G,UACjD,MAAMC,GAAeC,EAAAH,EAAME,gBAAY,MAAAC,SAAA,EAAAA,EAAI,GAE3C,MAAMC,GAAiBC,EAAAL,EAAMI,kBAAc,MAAAC,SAAA,EAAAA,EAAI,GAC/C,IAAKD,EAAe,kBAAoBJ,EAAMP,SAAU,CACtDW,EAAe,iBAAmB,M,CAGpC,OACEE,EAAA,SAAAC,OAAAC,OAAA,GACMJ,EAAc,CAClBK,QAAUC,GAAcV,EAAMS,QAAUT,EAAMS,QAAQC,GAAKC,UAC3DC,SAAUZ,EAAMP,UAAY,GAAIoB,EAAAb,EAAMc,YAAQ,MAAAD,SAAA,EAAAA,EAAI,EAClDE,KAAMf,EAAMe,KACZC,MAAKT,OAAAC,OAAAD,OAAAC,OAAA,GACArB,EACDa,EAAMjB,QACNiB,EAAMZ,QACNY,EAAMX,MACNW,EAAMV,SACNU,EAAMT,SACNS,EAAMR,SACNQ,EAAMP,UAAYO,EAAMiB,UAEvBf,KAGJF,EAAMiB,QACLX,EAAA,cAAYY,KAAMvB,EAAeK,GAAQmB,UAAS,OAChD,KACHnB,EAAMH,OAASG,EAAMiB,QACpBX,EAAA,WACEU,MAAM,OACNI,KAAMpB,EAAMH,KACZqB,KAAMlB,EAAMF,SACZuB,MAAOrB,EAAMsB,YAEb,KACJhB,EAAA,OACEU,MAAO,CACLO,QAAS,KACT,CAAC,WAAWvB,EAAMwB,eAAgBxB,EAAMwB,YAGzCvB,GAEFD,EAAMyB,aAAezB,EAAMyB,aAAe,KAGjD,Q"}