{"version":3,"names":["sides","min","Math","max","round","floor","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","value","evaluate","param","getSide","placement","split","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","includes","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","reference","floating","getOppositePlacement","getExpandedPlacements","oppositePlacement","getOppositeAlignmentPlacement","replace","getSideList","side","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","map","concat","expandPaddingObject","padding","getPaddingObject","rectToClientRect","rect","width","height","computeCoordsFromPlacement","_ref","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","computePosition","async","config","strategy","middleware","platform","validMiddleware","filter","Boolean","isRTL","getElementRects","statefulPlacement","middlewareData","resetCount","i","name","fn","nextX","nextY","data","reset","initialPlacement","elements","detectOverflow","state","options","_await$platform$isEle","boundary","rootBoundary","elementContext","altBoundary","paddingObject","altContext","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","arrow","arrowDimensions","getDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","offset","shouldAddOffset","alignmentOffset","centerOffset","flip","_middlewareData$arrow","_middlewareData$flip","mainAxis","checkMainAxis","crossAxis","checkCrossAxis","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","detectOverflowOptions","isBasePlacement","push","placements","overflow","overflows","overflowsData","every","_middlewareData$flip2","_overflowsData$filter","nextIndex","index","nextPlacement","resetPlacement","d","sort","a","b","_overflowsData$map$so","reduce","acc","getSideOffsets","isAnySideFullyClipped","some","hide","offsets","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","getBoundingRect","minX","minY","maxX","maxY","getRectsByLine","sortedRects","slice","groups","prevRect","inline","nativeClientRects","Array","from","getClientRects","clientRects","fallback","getBoundingClientRect","find","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","resetRects","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","diffCoords","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","ownerDocument","defaultView","window","document","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflowX","overflowY","display","getComputedStyle","test","isTableElement","isContainingBlock","webkit","isWebKit","css","transform","perspective","containerType","backdropFilter","willChange","contain","getContainingBlock","currentNode","getParentNode","isLastTraversableNode","CSS","supports","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","visualViewport","frameElement","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","Number","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","shouldAddVisualOffsets","isFixed","floatingOffsetParent","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","offsetWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","isOffsetParentAnElement","scroll","offsetRect","getWindowScrollBarX","getDocumentRect","html","scrollWidth","clientWidth","scrollHeight","clientHeight","getViewportRect","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","hasFixedPositionAncestor","stopNode","position","getClippingElementAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","shouldDropCurrentNode","ancestor","set","elementClippingAncestors","this","_c","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getRectRelativeToOffsetParent","getTrueOffsetParent","polyfill","getOffsetParentFn","getDimensionsFn","observeMove","onMove","io","timeoutId","root","cleanup","clearTimeout","disconnect","refresh","skip","threshold","insetTop","insetRight","insetBottom","insetLeft","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","IntersectionObserver","e","observe","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","frameId","prevRefRect","frameLoop","nextRefRect","removeEventListener","Map","mergedOptions","platformWithCache","computePosition$1"],"sources":["../../node_modules/.pnpm/@floating-ui+utils@0.1.6/node_modules/@floating-ui/utils/dist/floating-ui.utils.esm.js","../../node_modules/.pnpm/@floating-ui+core@1.5.0/node_modules/@floating-ui/core/dist/floating-ui.core.esm.js","../../node_modules/.pnpm/@floating-ui+utils@0.1.6/node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.esm.js","../../node_modules/.pnpm/@floating-ui+dom@1.5.3/node_modules/@floating-ui/dom/dist/floating-ui.dom.esm.js"],"sourcesContent":["const sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, platform };\n"],"mappings":"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"}